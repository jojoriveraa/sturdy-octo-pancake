/*
 * This code is sample code, provided as-is, and we make NO 
 * warranties as to its correctness or suitability for any purpose.
 * 
 * We hope that it's useful to you. Enjoy. 
 * Copyright LearningPatterns Inc.
 */

package com.javatunes.service;

import static org.junit.Assert.*;

import java.util.Collection;

import org.junit.Test;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.javatunes.domain.MusicItem;

public class CatalogTest {
	
	@Test
	public void testContextLookupPositive() {
		ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("applicationContext.xml");
		assertTrue("spring container should not be null", ctx != null);
		ctx.close();
	}

	@Test
	public void testCatalogLookupPositive() {
		// TODO: pass applicationContext.xml to the constructor
		ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("applicationContext.xml");
		// TODO:
		/*
		 * Look up the musicCatalog, assert that it's not null and invoke its toString
		 * method. Don't forget to close spring context
		 */
		Catalog catalog = ctx.getBean(Catalog.class);
		assertNotNull("Catalog should not be null", catalog);
		System.out.println(catalog);
		
		/*
		 * Catalog catalog2 = (Catalog) ctx.getBean("musicCatalog");
		 * assertNotNull("Catalog should not be null", catalog2);
		 * System.out.println(catalog2);
		 * 
		 * Catalog catalog3 = ctx.getBean(CatalogImpl.class);
		 * assertNotNull("Catalog should not be null", catalog3);
		 * System.out.println(catalog3);
		 */

		ctx.close();
	}

	// TODO: Not until Dependency Injection Lab - annotate as test method
	@Test
	public void testCatalogPositive() {
		// TODO: Create the context, lookup the catalog.
		ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("applicationContext.xml");
		Catalog catalog = ctx.getBean(Catalog.class);
		// TODO: DI Lab - call the size method test that it's greater than zero, and
		long catSize = catalog.size();
		assertNotEquals(0,catSize);
		// output its value
		System.out.println(catSize);
		// TODO: DI Lab - call the findByKeyword method with "a", test that there is at
		Collection<MusicItem> catKeyword = catalog.findByKeyword("a");
		// least
		assertTrue(catKeyword.size() >= 1);
		// one item found, and output the found items
		System.out.println(catKeyword);
		// TODO: Close the context.
		ctx.close();
	}

}
